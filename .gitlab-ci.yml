include:
  - template: Jobs/SAST.gitlab-ci.yml

stages:
  - build
  - package
  - deploy
  - scan
  - k8sdeploy

#variables:
 # KUBECONFIG: "$CI_PROJECT_DIR/.kube/config"

job_build_client:
  stage: build
  before_script:
    - cd client
  image: node:16.18.0-alpine
  script:
    - npm install next react react-dom
  

job_package_client:
  stage: package
  before_script:
    - cd client
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u reda91 -p $DOCKER_HUB_PASSWORD
    - docker build -t reda91/client .
    - docker push reda91/client:latest


job_deploy_client:
  stage: deploy
  before_script:
    - cd client
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker pull reda91/client:latest
    - docker run -d --name client_container -p 8080:80 reda91/client:latest


job_build_flask_server:
  stage: build
  before_script:
    - cd flask-server
  image: python:3.8-alpine
  script:
    - pip install --upgrade pip

job_package_flask_server:
  stage: package
  before_script:
    - cd flask-server
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u reda91 -p $DOCKER_HUB_PASSWORD
    - docker build -t reda91/python .
    



job_deploy_flask_server:
  stage: deploy
  before_script:
    - cd flask-server
  image: docker:stable
  services:
    - docker:dind
  script:
    
    - docker pull reda91/python:latest
    - docker run -d --name python_container -p 8080:80 reda91/python:latest

job_build_server:
  stage: build
  before_script:
    - cd server
  image: node:16.18.0-alpine
  script:
    - npm install


job_package_server:
  stage: package
  before_script:
    - cd server
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u reda91 -p $DOCKER_HUB_PASSWORD
    - docker build -t reda91/server .
    - docker push reda91/server:latest


job_deploy_server:
  stage: deploy
  before_script:
    - cd server
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker pull reda91/server:latest
    - docker run -d --name server_container -p 8080:80 reda91/server:latest

spotbugs-sast:
  stage: scan
  variables:
    COMPILE: "false"
  artifacts:
    paths:
      - .m2/
    reports:
      sast: gl-sast-report.json

k8sdeployment:
  stage: k8sdeploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  
  script:
    - kubectl config get-contexts
    - kubectl config use-context Reedaa/diagai:primary-agent
    - kubectl apply -f ./release/kubernetes-manifest.yml

